# Generated by Django 4.0.2 on 2022-02-26 06:38

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('request', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DeviceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('typename', models.CharField(max_length=400, unique=True, verbose_name='Наименование')),
                ('shortname', models.CharField(max_length=40, unique=True, verbose_name='Краткое наименование')),
            ],
            options={
                'verbose_name': 'Тип',
                'verbose_name_plural': 'Типы устройств',
                'db_table': 'devicetypes',
                'ordering': ['shortname'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Protocol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, unique=True, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Протокол',
                'verbose_name_plural': 'Протоколы связи',
                'db_table': 'protocols',
                'ordering': ['name'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Hub',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host', models.CharField(max_length=40, verbose_name='Адрес')),
                ('port', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(65535)], verbose_name='Порт')),
            ],
            options={
                'verbose_name': 'Концентратор',
                'verbose_name_plural': 'Концентраторы устройств',
                'db_table': 'hubs',
                'ordering': ('host', 'port'),
                'managed': True,
                'unique_together': {('host', 'port')},
                'index_together': {('host', 'port')},
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=40, verbose_name='Модель устройства')),
                ('mk', models.CharField(max_length=40, unique=True, verbose_name='Заводской (серийный) номер')),
                ('addr', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Адрес в сети концентратора')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активное')),
                ('fn', models.CharField(blank=True, max_length=400, null=True, verbose_name='Примечание')),
                ('hub', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='control.hub', verbose_name='Концентратор')),
                ('protocol', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='control.protocol', verbose_name='Протокол')),
                ('qset', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='request.queryset', verbose_name='Набор запросов')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='control.devicetype', verbose_name='Тип')),
            ],
            options={
                'verbose_name': 'Устройство',
                'verbose_name_plural': 'Список устройств',
                'db_table': 'devices',
                'ordering': ('hub', 'addr'),
                'managed': True,
                'unique_together': {('hub', 'addr')},
                'index_together': {('hub', 'addr')},
            },
        ),
    ]
